name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: test_db

    steps:
      - uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit SAST scan
        run: bandit -r . -f json -o bandit-report.json
        continue-on-error: true

      - name: Upload Bandit SAST report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

      - name: Build Docker image
        run: docker build -t test-image .

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin


      - name: Scan Docker image with Trivy
        run: trivy image -f json -o trivy-report.json test-image
        continue-on-error: true

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Create output directory
        run: mkdir -p pytest-output

      - name: Run tests in Docker container
        run: |
          docker run --rm \
            --network host \
            -v ${{ github.workspace }}/pytest-output:/pytest-output \
            -e DB_HOST=$DB_HOST \
            -e DB_PORT=$DB_PORT \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e DB_NAME=$DB_NAME \
            test-image \
            pytest -q --junitxml=/pytest-output/pytest.xml

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: pytest-output/pytest.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sobinary/ci-sandbox:latest,sobinary/ci-sandbox:${{ github.sha }}
